{"version":3,"sources":["../../src/stores/columns_store.js"],"names":[],"mappings":"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","file":"columns_store.js","sourcesContent":["const EventEmitter  = require(\"events\").EventEmitter;\nconst assign        = require(\"react/lib/Object.assign\");\n\nconst _ = require(\"lodash\");\n\nconst textMixins = require(\"morse-react-mixins\").text_mixins;\nconst ColumnsDispatcher = require(\"../dispatcher/columns_dispatcher\");\n\nvar columns_ids = [];\n\nconst registeredCallback = function(payload) {\n  let action = payload.action;\n  switch(action.type) {\n    case \"ADDING_COLUMNS\":\n      ColumnsStore.addColumns(action.columns);\n      ColumnsStore.emitChange(\"adding\");\n      break;\n\n    case \"CHANGE_DEVICE\":\n      ColumnsStore.changeDevice(action.device);\n      ColumnsStore.emitChange(\"change\");\n      break;\n    }\n};\n\nconst store = {\n  device          : \"desktop\",\n  columns         : [],\n  columns_ids     : [],\n  visible_columns : [],\n\n\n  emitChange(event) {\n    this.emit(event);\n  },\n\n  addChangeListener(event, callback) {\n    this.on(event, callback);\n  },\n\n  removeChangeListener(event, callback) {\n    this.removeListener(event, callback);\n  },\n\n  addColumns(c){\n    this.columns = this.setTitles(c);\n    this.setVisibleColumns(this.device);\n  },\n\n  changeDevice(d){\n    this.device = d;\n    this.setVisibleColumns(d);\n  },\n\n  getKeys(){\n    return _.pluck(this.visible_columns, \"key\");\n  },\n\n  getDateColumns(){\n    let dates = _.chain(this.columns)\n      .filter((col)=>(col.type === \"date\" || col.type === \"dateTime\"))\n      .map((col)=> this.reduceObj(col, [\"key\", \"title\", \"type\", \"fmt\"]))\n      .value();\n\n    return dates;\n  },\n\n  getSearchable(){\n    let searchables = _.chain(this.columns)\n      .filter((col)=>col.searchable)\n      .map((col)=> this.reduceObj(col, [\"key\", \"title\"]))\n      .value();\n\n    return searchables;\n  },\n\n  getSortable(){\n    let sortables = _.chain(this.columns)\n      .filter((col)=>col.sortable)\n      .map((col)=> this.reduceObj(col, [\"key\", \"title\"]))\n      .value();\n\n    return sortables;\n  },\n\n  getTitles(){\n    return _.pluck(this.visible_columns, \"title\");\n  },\n\n  getTitleForKey(key){\n    let item = _.find(this.columns, (col)=>col.key===key);\n    return item.title\n  },\n\n  reduceObj(obj, values){\n    let reduced = _.omit(obj, (v, k)=>{\n      return !_.includes(values, k)\n    });\n    return reduced;\n  },\n\n  setVisibleColumns(device){\n    let check = {}\n    check[device] = true;\n    this.visible_columns = _.where(this.columns, check);\n  },\n\n  setTitles(columns){\n    var that = this;\n    columns = _.map(columns, function(col){\n      // console.log(that.capitalize)\n      if(!_.has(col, \"title\")){\n        let title = this.capitalize(col.key);\n        _.set(col, \"title\", title)\n      }\n\n      return col\n    }.bind(this));\n\n    return columns\n  }\n};\n\nObject.assign(store, textMixins);\n\n\nconst ColumnsStore = assign({}, EventEmitter.prototype, store);\n\nColumnsStore.dispatchToken = ColumnsDispatcher.register(registeredCallback);\n\nmodule.exports = ColumnsStore;\n"]}